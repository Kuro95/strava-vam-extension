name: Manual Release (Signed XPI)

on:
  push:
    tags:
      - 'v*.*.*-manual'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.4)'
        required: true
        type: string

jobs:
  build-and-sign:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Get version from tag or input
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          # Remove -manual suffix from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          VERSION=${VERSION%-manual}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        fi
    
    - name: Verify version matches manifest
      run: |
        MANIFEST_VERSION=$(jq -r '.version' src/manifest.json)
        if [ "$MANIFEST_VERSION" != "${{ steps.get_version.outputs.VERSION }}" ]; then
          echo "Version mismatch: manifest.json has $MANIFEST_VERSION but release is ${{ steps.get_version.outputs.VERSION }}"
          exit 1
        fi
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Run linter
      run: npm run lint
    
    - name: Build extension
      run: npm run build
    
    - name: Package extension
      run: npm run package
    
    - name: Run package structure tests
      run: npm run test:package
    
    - name: Validate package structure
      run: npm run validate:package
    
    - name: Validate with web-ext lint
      run: npm run validate
    
    - name: Sign extension (no auto-submit)
      env:
        WEB_EXT_API_KEY: ${{ secrets.FIREFOX_API_KEY }}
        WEB_EXT_API_SECRET: ${{ secrets.FIREFOX_API_SECRET }}
      run: |
        mkdir -p artifacts
        # Sign without auto-submit using --channel=unlisted
        # This creates a signed .xpi that can be manually uploaded to AMO
        npx web-ext sign \
          --source-dir=dist \
          --artifacts-dir=artifacts \
          --channel=unlisted \
          --api-key=$WEB_EXT_API_KEY \
          --api-secret=$WEB_EXT_API_SECRET
    
    - name: List artifacts
      run: |
        echo "📦 Generated artifacts:"
        ls -lh artifacts/
    
    - name: Create Release Notes
      id: release_notes
      run: |
        cat > RELEASE_NOTES.md << 'EOF'
        ## 📦 Manual Release Package
        
        This release contains a **signed .xpi file** ready for manual upload to Firefox Add-ons Store.
        
        ### 📥 Files Included
        - **Signed .xpi**: Ready for manual submission to AMO
        - **Source ZIP**: For verification and backup
        
        ### 🚀 How to Manually Upload to Firefox Add-ons
        
        1. **Go to Firefox Add-ons Developer Hub**
           - Visit: https://addons.mozilla.org/developers/
           - Sign in with your Mozilla account
        
        2. **Navigate to Your Extension**
           - If this is a new submission: Click "Submit a New Add-on"
           - If updating: Go to your extension's page → "Upload New Version"
        
        3. **Upload the Signed .xpi**
           - Click "Select a file..."
           - Choose the `.xpi` file from this release
           - Upload and wait for validation
        
        4. **Complete the Submission**
           - Fill in release notes and any required information
           - Submit for review
           - Mozilla typically reviews within 1-3 days
        
        ### ✅ Next Steps After Approval
        
        Once your extension is approved by Mozilla, you can switch to automatic publishing:
        - Use regular version tags (e.g., `v1.0.5`) instead of `-manual` suffix
        - The main build workflow will automatically submit updates
        - See [CI-CD-SETUP.md](docs/CI-CD-SETUP.md) for details
        
        ### 📚 Documentation
        - [Mozilla Extension Workshop: Submitting an Add-on](https://extensionworkshop.com/documentation/publish/submitting-an-add-on/)
        - [Manual Upload Guide](README.md#manual-upload-to-firefox-add-ons)
        
        ---
        
        ## What's Changed
        EOF
        
        # Add commit history if available
        if git describe --tags --abbrev=0 HEAD^ 2>/dev/null; then
          git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s" >> RELEASE_NOTES.md
        else
          echo "- Initial release" >> RELEASE_NOTES.md
        fi
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/*.xpi
          dist/strava-vam-extension-v*.zip
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false
        tag_name: ${{ github.ref_name || format('v{0}-manual', github.event.inputs.version) }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: signed-extension
        path: |
          artifacts/*.xpi
          dist/*.zip
        retention-days: 90
    
    - name: Summary
      run: |
        echo "## ✅ Manual Release Created Successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "The signed .xpi file is ready for manual upload to Firefox Add-ons Store." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📥 Download the Release" >> $GITHUB_STEP_SUMMARY
        echo "Visit the [Releases page](https://github.com/${{ github.repository }}/releases) to download the signed .xpi" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📝 Manual Upload Instructions" >> $GITHUB_STEP_SUMMARY
        echo "See the release notes for step-by-step instructions on uploading to AMO." >> $GITHUB_STEP_SUMMARY
